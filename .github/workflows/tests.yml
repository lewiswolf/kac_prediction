name: Tests

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

env:
    WANDB_MODE: offline

jobs:
    installation:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
                python: ["3.11"]

        steps:
            - uses: actions/checkout@master
            - uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python }}

            - name: Test installation
              run: pip install "git+https://github.com/lewiswolf/kac_drumset.git#egg=kac_drumset"

    all-tests:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
                python: ["3.11"]

        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: recursive
            - uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python }}
            - uses: actions/cache@v3
              id: cache-pipenv
              with:
                  path: ~/.local/share/virtualenvs
                  key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}

            - name: Install pipenv
              run: python -m pip install --upgrade pip pipenv setuptools wheel

            - name: Install python dependencies
              run: pipenv install -d --python ${{ matrix.python }}

            - name: Install OS specific dependencies
              if: ${{ matrix.os == 'ubuntu-latest' }}
              run: 
                  pipenv run pip install torch torchaudio --index-url https://download.pytorch.org/whl/cpu
                  pipenv run pip install google

            - name: Lint project
              run: pipenv run flake8 --config=test/test.cfg

            - name: Assert types
              run: pipenv run mypy --config-file=test/test.cfg

            - name: Run unit tests
              run: pipenv run python test/test.py
